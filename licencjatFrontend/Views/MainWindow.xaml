<Window x:Class="licencjatFrontend.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:licencjatFrontend.Views"
        xmlns:local1="clr-namespace:licencjatFrontend.ViewModels" d:DataContext="{d:DesignInstance Type=local1:MainViewModel}"
        mc:Ignorable="d"
        Title="Wybór schroniska górskiego" Height="650" Width="800">

    <Window.Resources>
        <!-- Zasoby: Fonty i kolory -->
        <FontFamily x:Key="HeaderFont">Segoe UI</FontFamily>
        <FontFamily x:Key="BodyFont">Arial</FontFamily>

        <SolidColorBrush x:Key="HeaderBrush" Color="#DFF0D8"/>
        <!-- jasnozielony tekst nagłówka -->
        <SolidColorBrush x:Key="BodyBrush" Color="#3C763D"/>
        <!-- ciemnozielony tekst -->
        <SolidColorBrush x:Key="RowHoverBrush" Color="#C8E5BC"/>
        <SolidColorBrush x:Key="RowBackgroundBrush" Color="#DFF0D8"/>
        <SolidColorBrush x:Key="AltRowBackgroundBrush" Color="#E8FFE8"/>
        <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="#3C763D"/>
        <!-- tło nagłówka -->

        <!-- Styl dla DataGrid -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="{StaticResource RowBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="#D1D1D1"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#D1D1D1"/>
            <Setter Property="VerticalGridLinesBrush" Value="#D1D1D1"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="RowBackground" Value="{StaticResource RowBackgroundBrush}"/>
            <Setter Property="AlternatingRowBackground" Value="{StaticResource AltRowBackgroundBrush}"/>

            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Foreground" Value="{StaticResource BodyBrush}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Height" Value="35"/>
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Background" Value="{StaticResource RowBackgroundBrush}"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="DarkGreen" BlurRadius="5" ShadowDepth="1" Opacity="0.2"/>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <!-- Efekt dla myszy nad wierszem (hover) -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource RowHoverBrush}"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Green" BlurRadius="8" ShadowDepth="2" Opacity="0.4"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!-- Usuwanie tła niebieskiego po kliknięciu (IsSelected) -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource RowBackgroundBrush}"/>
                                <!-- Zamiast tła niebieskiego -->
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <!-- Usuwanie obramowania -->
                                <Setter Property="Foreground" Value="{StaticResource BodyBrush}"/>
                                <!-- Tekst, aby był ciemnozielony -->
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>


            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}"/>
                        <Setter Property="Foreground" Value="{StaticResource HeaderBrush}"/>
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="FontFamily" Value="{StaticResource HeaderFont}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="SelectionUnit" Value="FullRow"/>
        </Style>

        <!-- Styl dla TextBlock, nagłówków i przycisków -->
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource BodyFont}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource BodyBrush}"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="FontFamily" Value="{StaticResource HeaderFont}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#31708F"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="#31708F"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <!-- Definicja obrazu tła -->
        <ImageBrush x:Key="WindowBackground" ImageSource="/licencjatFrontend;component/Resources/Images/rankingTlo.jpeg" Stretch="UniformToFill"/>
    </Window.Resources>

    <!-- Ustawienie obrazu jako tło głównego okna -->
    <Grid>
        <!-- Tło, które zajmuje całe okno -->
        <Grid Background="{StaticResource WindowBackground}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

        <!-- Zawartość okna z marginesami -->
        <Grid Margin="50">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Sekcja z komunikatem -->
            <StackPanel Grid.Row="0" Margin="10">
                <Border Style="{StaticResource InfoBoxStyle}">
                    <DockPanel>
                        <TextBlock Text="ℹ"
                                   FontSize="18"
                                   Foreground="#31708F"
                                   Margin="0,0,10,0"
                                   VerticalAlignment="Top"/>
                        <TextBlock Style="{StaticResource InfoTextStyle}"
                                   Text="Wskaż stopień istotności dla każdego kryterium. 
0 oznacza brak uwzględnienia, im wyższy stopień, tym większe znaczenie kryterium."
                                   VerticalAlignment="Center"/>
                    </DockPanel>
                </Border>
            </StackPanel>

            <!-- Tabela z kryteriami -->
            <DataGrid ItemsSource="{Binding Criteria}" 
          AutoGenerateColumns="False"
          CanUserAddRows="False" 
          Margin="0,0,0,10"
          RowHeight="35"
          Background="#D9EDF7"
          BorderThickness="0"
          VerticalScrollBarVisibility="Auto" 
          HorizontalScrollBarVisibility="Auto"
          HeadersVisibility="Column"
          Grid.Row="2"
          MaxHeight="{Binding DataGridHeight}"
          AlternationCount="2"
          EnableRowVirtualization="False">


                <DataGrid.Columns>
                    <!-- Kolumna: Nazwa -->
                    <DataGridTemplateColumn Header="Nazwa" Width="*" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" 
                               FontWeight="Bold"
                               Foreground="#31708F"
                               TextWrapping="Wrap"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Kolumna: Wartość -->
                    <DataGridTemplateColumn Header="Wartość">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedValuePath="."
                              ItemsSource="{Binding DataContext.Values, RelativeSource={RelativeSource AncestorType=Window}}"
                              Width="50"
                              FontWeight="Bold"
                              Foreground="#31708F"
                              ToolTip="Wybierz wartość kryterium"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>


            <!-- Przyciski -->
            <Grid Grid.Row="1" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" Grid.Column="0">
                    <Button Content="Pobierz kryteria" Command="{Binding LoadCriteriaCommand}" Width="Auto" ToolTip="Kliknij, aby pobrać kryteria oceny"/>
                    <Button Content="Generuj ranking" Command="{Binding GetRankingCommand}" Width="Auto" ToolTip="Kliknij, aby wygenerować ranking"/>
                </StackPanel>

                <ComboBox Grid.Column="2"
                          ItemsSource="{Binding MethodViewModel.AvailableMethods}"
                          SelectedValue="{Binding MethodViewModel.SelectedMethod, Mode=TwoWay}"
                          Width="100" ToolTip="Wybierz metodę oceny"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
